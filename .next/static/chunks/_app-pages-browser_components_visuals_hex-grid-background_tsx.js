"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_components_visuals_hex-grid-background_tsx"],{

/***/ "(app-pages-browser)/./components/visuals/hex-grid-background.tsx":
/*!****************************************************!*\
  !*** ./components/visuals/hex-grid-background.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HexGridBackground)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction HexGridBackground() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HexGridBackground.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return;\n            let width = canvas.offsetWidth;\n            let height = canvas.offsetHeight;\n            canvas.width = width;\n            canvas.height = height;\n            const hexRadius = 20;\n            const hexHeight = 1.5 * hexRadius;\n            const hexWidth = 2 * hexRadius;\n            const vertDist = hexHeight;\n            const horizDist = hexWidth * 0.75;\n            let scrollY = window.scrollY;\n            const hexes = [];\n            for(let y = 0; y < height + hexHeight; y += vertDist){\n                for(let x = 0; x < width + hexWidth; x += horizDist){\n                    const xOffset = y / vertDist % 2 === 0 ? 0 : hexWidth / 2;\n                    const offset = Math.random() * 2 * Math.PI;\n                    hexes.push({\n                        x: x + xOffset,\n                        y,\n                        offset\n                    });\n                }\n            }\n            const drawHex = {\n                \"HexGridBackground.useEffect.drawHex\": (x, y, radius, opacity)=>{\n                    ctx.beginPath();\n                    for(let i = 0; i < 6; i++){\n                        const angle = Math.PI / 3 * i;\n                        const px = x + radius * Math.cos(angle);\n                        const py = y + radius * Math.sin(angle);\n                        if (i === 0) ctx.moveTo(px, py);\n                        else ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.strokeStyle = \"rgba(255, 255, 255, \".concat(opacity, \")\");\n                    ctx.lineWidth = 0.5;\n                    ctx.stroke();\n                }\n            }[\"HexGridBackground.useEffect.drawHex\"];\n            const handleScroll = {\n                \"HexGridBackground.useEffect.handleScroll\": ()=>{\n                    scrollY = window.scrollY;\n                }\n            }[\"HexGridBackground.useEffect.handleScroll\"];\n            window.addEventListener(\"scroll\", handleScroll);\n            const handleResize = {\n                \"HexGridBackground.useEffect.handleResize\": ()=>{\n                    width = canvas.offsetWidth;\n                    height = canvas.offsetHeight;\n                    canvas.width = width;\n                    canvas.height = height;\n                }\n            }[\"HexGridBackground.useEffect.handleResize\"];\n            window.addEventListener(\"resize\", handleResize);\n            let animationFrameId;\n            const animate = {\n                \"HexGridBackground.useEffect.animate\": ()=>{\n                    ctx.clearRect(0, 0, width, height);\n                    const time = Date.now() * 0.001;\n                    for (const hex of hexes){\n                        const float = Math.sin(time + hex.offset) * 2;\n                        const scrollShift = scrollY * 0.05;\n                        const yPos = hex.y + float + scrollShift;\n                        const visible = yPos >= -hexRadius && yPos <= height + hexRadius;\n                        if (visible) {\n                            const opacity = 0.1 + 0.05 * Math.sin(time + hex.offset);\n                            drawHex(hex.x, yPos, hexRadius, opacity);\n                        }\n                    }\n                    animationFrameId = requestAnimationFrame(animate);\n                }\n            }[\"HexGridBackground.useEffect.animate\"];\n            animate();\n            return ({\n                \"HexGridBackground.useEffect\": ()=>{\n                    cancelAnimationFrame(animationFrameId);\n                    window.removeEventListener(\"scroll\", handleScroll);\n                    window.removeEventListener(\"resize\", handleResize);\n                }\n            })[\"HexGridBackground.useEffect\"];\n        }\n    }[\"HexGridBackground.useEffect\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        className: \"absolute top-0 left-0 w-full h-full z-0 pointer-events-none\"\n    }, void 0, false, {\n        fileName: \"/Users/kejvi/Documents/GitHub/TNMI/components/visuals/hex-grid-background.tsx\",\n        lineNumber: 95,\n        columnNumber: 5\n    }, this);\n}\n_s(HexGridBackground, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HexGridBackground;\nvar _c;\n$RefreshReg$(_c, \"HexGridBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdmlzdWFscy9oZXgtZ3JpZC1iYWNrZ3JvdW5kLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFMEM7QUFFM0IsU0FBU0U7O0lBQ3RCLE1BQU1DLFlBQVlGLDZDQUFNQSxDQUFvQjtJQUU1Q0QsZ0RBQVNBO3VDQUFDO1lBQ1IsTUFBTUksU0FBU0QsVUFBVUUsT0FBTztZQUNoQyxJQUFJLENBQUNELFFBQVE7WUFFYixNQUFNRSxNQUFNRixPQUFPRyxVQUFVLENBQUM7WUFDOUIsSUFBSSxDQUFDRCxLQUFLO1lBRVYsSUFBSUUsUUFBUUosT0FBT0ssV0FBVztZQUM5QixJQUFJQyxTQUFTTixPQUFPTyxZQUFZO1lBQ2hDUCxPQUFPSSxLQUFLLEdBQUdBO1lBQ2ZKLE9BQU9NLE1BQU0sR0FBR0E7WUFFaEIsTUFBTUUsWUFBWTtZQUNsQixNQUFNQyxZQUFZLE1BQU1EO1lBQ3hCLE1BQU1FLFdBQVcsSUFBSUY7WUFDckIsTUFBTUcsV0FBV0Y7WUFDakIsTUFBTUcsWUFBWUYsV0FBVztZQUU3QixJQUFJRyxVQUFVQyxPQUFPRCxPQUFPO1lBRTVCLE1BQU1FLFFBQW9ELEVBQUU7WUFFNUQsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlWLFNBQVNHLFdBQVdPLEtBQUtMLFNBQVU7Z0JBQ3JELElBQUssSUFBSU0sSUFBSSxHQUFHQSxJQUFJYixRQUFRTSxVQUFVTyxLQUFLTCxVQUFXO29CQUNwRCxNQUFNTSxVQUFXLElBQUtQLFdBQVksTUFBTSxJQUFJLElBQUlELFdBQVc7b0JBQzNELE1BQU1TLFNBQVNDLEtBQUtDLE1BQU0sS0FBSyxJQUFJRCxLQUFLRSxFQUFFO29CQUMxQ1AsTUFBTVEsSUFBSSxDQUFDO3dCQUFFTixHQUFHQSxJQUFJQzt3QkFBU0Y7d0JBQUdHO29CQUFPO2dCQUN6QztZQUNGO1lBRUEsTUFBTUs7dURBQVUsQ0FBQ1AsR0FBV0QsR0FBV1MsUUFBZ0JDO29CQUNyRHhCLElBQUl5QixTQUFTO29CQUNiLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLEdBQUdBLElBQUs7d0JBQzFCLE1BQU1DLFFBQVFULEtBQUtFLEVBQUUsR0FBRyxJQUFJTTt3QkFDNUIsTUFBTUUsS0FBS2IsSUFBSVEsU0FBU0wsS0FBS1csR0FBRyxDQUFDRjt3QkFDakMsTUFBTUcsS0FBS2hCLElBQUlTLFNBQVNMLEtBQUthLEdBQUcsQ0FBQ0o7d0JBQ2pDLElBQUlELE1BQU0sR0FBRzFCLElBQUlnQyxNQUFNLENBQUNKLElBQUlFOzZCQUN2QjlCLElBQUlpQyxNQUFNLENBQUNMLElBQUlFO29CQUN0QjtvQkFDQTlCLElBQUlrQyxTQUFTO29CQUNibEMsSUFBSW1DLFdBQVcsR0FBRyx1QkFBK0IsT0FBUlgsU0FBUTtvQkFDakR4QixJQUFJb0MsU0FBUyxHQUFHO29CQUNoQnBDLElBQUlxQyxNQUFNO2dCQUNaOztZQUVBLE1BQU1DOzREQUFlO29CQUNuQjNCLFVBQVVDLE9BQU9ELE9BQU87Z0JBQzFCOztZQUNBQyxPQUFPMkIsZ0JBQWdCLENBQUMsVUFBVUQ7WUFFbEMsTUFBTUU7NERBQWU7b0JBQ25CdEMsUUFBUUosT0FBT0ssV0FBVztvQkFDMUJDLFNBQVNOLE9BQU9PLFlBQVk7b0JBQzVCUCxPQUFPSSxLQUFLLEdBQUdBO29CQUNmSixPQUFPTSxNQUFNLEdBQUdBO2dCQUNsQjs7WUFDQVEsT0FBTzJCLGdCQUFnQixDQUFDLFVBQVVDO1lBRWxDLElBQUlDO1lBQ0osTUFBTUM7dURBQVU7b0JBQ2QxQyxJQUFJMkMsU0FBUyxDQUFDLEdBQUcsR0FBR3pDLE9BQU9FO29CQUMzQixNQUFNd0MsT0FBT0MsS0FBS0MsR0FBRyxLQUFLO29CQUUxQixLQUFLLE1BQU1DLE9BQU9sQyxNQUFPO3dCQUN2QixNQUFNbUMsUUFBUTlCLEtBQUthLEdBQUcsQ0FBQ2EsT0FBT0csSUFBSTlCLE1BQU0sSUFBSTt3QkFDNUMsTUFBTWdDLGNBQWN0QyxVQUFVO3dCQUM5QixNQUFNdUMsT0FBT0gsSUFBSWpDLENBQUMsR0FBR2tDLFFBQVFDO3dCQUM3QixNQUFNRSxVQUFVRCxRQUFRLENBQUM1QyxhQUFhNEMsUUFBUTlDLFNBQVNFO3dCQUN2RCxJQUFJNkMsU0FBUzs0QkFDWCxNQUFNM0IsVUFBVSxNQUFNLE9BQU9OLEtBQUthLEdBQUcsQ0FBQ2EsT0FBT0csSUFBSTlCLE1BQU07NEJBQ3ZESyxRQUFReUIsSUFBSWhDLENBQUMsRUFBRW1DLE1BQU01QyxXQUFXa0I7d0JBQ2xDO29CQUNGO29CQUVBaUIsbUJBQW1CVyxzQkFBc0JWO2dCQUMzQzs7WUFFQUE7WUFFQTsrQ0FBTztvQkFDTFcscUJBQXFCWjtvQkFDckI3QixPQUFPMEMsbUJBQW1CLENBQUMsVUFBVWhCO29CQUNyQzFCLE9BQU8wQyxtQkFBbUIsQ0FBQyxVQUFVZDtnQkFDdkM7O1FBQ0Y7c0NBQUcsRUFBRTtJQUVMLHFCQUNFLDhEQUFDMUM7UUFDQ3lELEtBQUsxRDtRQUNMMkQsV0FBVTs7Ozs7O0FBR2hCO0dBL0Z3QjVEO0tBQUFBIiwic291cmNlcyI6WyIvVXNlcnMva2VqdmkvRG9jdW1lbnRzL0dpdEh1Yi9UTk1JL2NvbXBvbmVudHMvdmlzdWFscy9oZXgtZ3JpZC1iYWNrZ3JvdW5kLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSGV4R3JpZEJhY2tncm91bmQoKSB7XG4gIGNvbnN0IGNhbnZhc1JlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudD4obnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjYW52YXMgPSBjYW52YXNSZWYuY3VycmVudDtcbiAgICBpZiAoIWNhbnZhcykgcmV0dXJuO1xuXG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICBpZiAoIWN0eCkgcmV0dXJuO1xuXG4gICAgbGV0IHdpZHRoID0gY2FudmFzLm9mZnNldFdpZHRoO1xuICAgIGxldCBoZWlnaHQgPSBjYW52YXMub2Zmc2V0SGVpZ2h0O1xuICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XG5cbiAgICBjb25zdCBoZXhSYWRpdXMgPSAyMDtcbiAgICBjb25zdCBoZXhIZWlnaHQgPSAxLjUgKiBoZXhSYWRpdXM7XG4gICAgY29uc3QgaGV4V2lkdGggPSAyICogaGV4UmFkaXVzO1xuICAgIGNvbnN0IHZlcnREaXN0ID0gaGV4SGVpZ2h0O1xuICAgIGNvbnN0IGhvcml6RGlzdCA9IGhleFdpZHRoICogMC43NTtcblxuICAgIGxldCBzY3JvbGxZID0gd2luZG93LnNjcm9sbFk7XG5cbiAgICBjb25zdCBoZXhlczogeyB4OiBudW1iZXI7IHk6IG51bWJlcjsgb2Zmc2V0OiBudW1iZXIgfVtdID0gW107XG5cbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IGhlaWdodCArIGhleEhlaWdodDsgeSArPSB2ZXJ0RGlzdCkge1xuICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCB3aWR0aCArIGhleFdpZHRoOyB4ICs9IGhvcml6RGlzdCkge1xuICAgICAgICBjb25zdCB4T2Zmc2V0ID0gKCh5IC8gdmVydERpc3QpICUgMiA9PT0gMCA/IDAgOiBoZXhXaWR0aCAvIDIpO1xuICAgICAgICBjb25zdCBvZmZzZXQgPSBNYXRoLnJhbmRvbSgpICogMiAqIE1hdGguUEk7XG4gICAgICAgIGhleGVzLnB1c2goeyB4OiB4ICsgeE9mZnNldCwgeSwgb2Zmc2V0IH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRyYXdIZXggPSAoeDogbnVtYmVyLCB5OiBudW1iZXIsIHJhZGl1czogbnVtYmVyLCBvcGFjaXR5OiBudW1iZXIpID0+IHtcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGFuZ2xlID0gTWF0aC5QSSAvIDMgKiBpO1xuICAgICAgICBjb25zdCBweCA9IHggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSk7XG4gICAgICAgIGNvbnN0IHB5ID0geSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgaWYgKGkgPT09IDApIGN0eC5tb3ZlVG8ocHgsIHB5KTtcbiAgICAgICAgZWxzZSBjdHgubGluZVRvKHB4LCBweSk7XG4gICAgICB9XG4gICAgICBjdHguY2xvc2VQYXRoKCk7XG4gICAgICBjdHguc3Ryb2tlU3R5bGUgPSBgcmdiYSgyNTUsIDI1NSwgMjU1LCAke29wYWNpdHl9KWA7XG4gICAgICBjdHgubGluZVdpZHRoID0gMC41O1xuICAgICAgY3R4LnN0cm9rZSgpO1xuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVTY3JvbGwgPSAoKSA9PiB7XG4gICAgICBzY3JvbGxZID0gd2luZG93LnNjcm9sbFk7XG4gICAgfTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBoYW5kbGVTY3JvbGwpO1xuXG4gICAgY29uc3QgaGFuZGxlUmVzaXplID0gKCkgPT4ge1xuICAgICAgd2lkdGggPSBjYW52YXMub2Zmc2V0V2lkdGg7XG4gICAgICBoZWlnaHQgPSBjYW52YXMub2Zmc2V0SGVpZ2h0O1xuICAgICAgY2FudmFzLndpZHRoID0gd2lkdGg7XG4gICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgIH07XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgaGFuZGxlUmVzaXplKTtcblxuICAgIGxldCBhbmltYXRpb25GcmFtZUlkOiBudW1iZXI7XG4gICAgY29uc3QgYW5pbWF0ZSA9ICgpID0+IHtcbiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICBjb25zdCB0aW1lID0gRGF0ZS5ub3coKSAqIDAuMDAxO1xuXG4gICAgICBmb3IgKGNvbnN0IGhleCBvZiBoZXhlcykge1xuICAgICAgICBjb25zdCBmbG9hdCA9IE1hdGguc2luKHRpbWUgKyBoZXgub2Zmc2V0KSAqIDI7XG4gICAgICAgIGNvbnN0IHNjcm9sbFNoaWZ0ID0gc2Nyb2xsWSAqIDAuMDU7XG4gICAgICAgIGNvbnN0IHlQb3MgPSBoZXgueSArIGZsb2F0ICsgc2Nyb2xsU2hpZnQ7XG4gICAgICAgIGNvbnN0IHZpc2libGUgPSB5UG9zID49IC1oZXhSYWRpdXMgJiYgeVBvcyA8PSBoZWlnaHQgKyBoZXhSYWRpdXM7XG4gICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgY29uc3Qgb3BhY2l0eSA9IDAuMSArIDAuMDUgKiBNYXRoLnNpbih0aW1lICsgaGV4Lm9mZnNldCk7XG4gICAgICAgICAgZHJhd0hleChoZXgueCwgeVBvcywgaGV4UmFkaXVzLCBvcGFjaXR5KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBhbmltYXRpb25GcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xuICAgIH07XG5cbiAgICBhbmltYXRlKCk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2FuY2VsQW5pbWF0aW9uRnJhbWUoYW5pbWF0aW9uRnJhbWVJZCk7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBoYW5kbGVTY3JvbGwpO1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgaGFuZGxlUmVzaXplKTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Y2FudmFzXG4gICAgICByZWY9e2NhbnZhc1JlZn1cbiAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlIHRvcC0wIGxlZnQtMCB3LWZ1bGwgaC1mdWxsIHotMCBwb2ludGVyLWV2ZW50cy1ub25lXCJcbiAgICAvPlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVJlZiIsIkhleEdyaWRCYWNrZ3JvdW5kIiwiY2FudmFzUmVmIiwiY2FudmFzIiwiY3VycmVudCIsImN0eCIsImdldENvbnRleHQiLCJ3aWR0aCIsIm9mZnNldFdpZHRoIiwiaGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiaGV4UmFkaXVzIiwiaGV4SGVpZ2h0IiwiaGV4V2lkdGgiLCJ2ZXJ0RGlzdCIsImhvcml6RGlzdCIsInNjcm9sbFkiLCJ3aW5kb3ciLCJoZXhlcyIsInkiLCJ4IiwieE9mZnNldCIsIm9mZnNldCIsIk1hdGgiLCJyYW5kb20iLCJQSSIsInB1c2giLCJkcmF3SGV4IiwicmFkaXVzIiwib3BhY2l0eSIsImJlZ2luUGF0aCIsImkiLCJhbmdsZSIsInB4IiwiY29zIiwicHkiLCJzaW4iLCJtb3ZlVG8iLCJsaW5lVG8iLCJjbG9zZVBhdGgiLCJzdHJva2VTdHlsZSIsImxpbmVXaWR0aCIsInN0cm9rZSIsImhhbmRsZVNjcm9sbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVSZXNpemUiLCJhbmltYXRpb25GcmFtZUlkIiwiYW5pbWF0ZSIsImNsZWFyUmVjdCIsInRpbWUiLCJEYXRlIiwibm93IiwiaGV4IiwiZmxvYXQiLCJzY3JvbGxTaGlmdCIsInlQb3MiLCJ2aXNpYmxlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVmIiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/visuals/hex-grid-background.tsx\n"));

/***/ })

}]);